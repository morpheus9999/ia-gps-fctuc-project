Caro professor,

A implementação do algoritmo de Dijkstra já se encontra implementada no código que nos foi fornecido por um aluno do ano passado. Apenas terá de sofrer algumas alterações, nomeadamente no que toca aos pesos do grafo que o Dijkstra tem em conta.

Assim, a nossa ideia é a seguinte:

Usar o Dijkstra, mas os pesos do grafo serão constituídos pelo tempo mínimo e não pela distancia mínima, sendo esse tempo minimo calculado atraves dos seguintes parâmetros: 
-> (Velocidade Mínima (carro mais lento) * P1 + Velocidade Máxima Permitida (troço estrada) * P2 + Velocidade Média (carros estrada) * P3)/Comprimento Troço Estrada

em que P1+P2+P3 = 1

Estes pesos terão em conta as seguintes caracteristicas:
Se o carro mais lento estiver no inicio do troço de estrada, terá maior peso que os outros parâmetros da formula.
Se não existirem carros na via (ponto inicial), P2 terá o valor máximo.

estes tempos são actualizados periodicamente
os agentes apenas pedirão um recalculo da rota através destas informações, quando estiverem a uma distancia D do proximo cruzamento(possibilidade de alterar rota)
O agente-master apenas responderá a pedidos on-demand de recalculos de rotas.
o processo de cálculo das rotas é efectuado centralmente com o que designamos por agente-master

este algoritmo terá em conta todos os troços de estradas existentes(?)

todos estes parâmetros (P1,P2,P3 e D) terão de ser objecto de estudo experimental

Em relação à questão de inovação da nossa abordagem, pelo que apurámos, a maior parte dos sistemas de transito não usa informação real. Usam informações estatisticas. O unico que esta a usar informação real neste momento é o tom tom e mesmo assim tem um delay de 15 minutos.

O google também usa tráfego ao vivo em determinadas zonas, e também outro que recorre a dados estatísticos. O que pretendemos é, através de toda a informação da rede, obter o caminho mais rápido, usando o mínimo de cálculos possíveis.

Perguntar ao professor:
Como gerar rotas de A para B.